name: Create Release

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Development
          fetch-depth: 0

      - name: Install 7zip
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full

      - name: Get version and date
        id: get_version
        run: |
          if [ ! -f "spruce/spruce" ]; then
            echo "Error: spruce/spruce file not found"
            exit 1
          fi
          echo "version=$(cat spruce/spruce)-$(date '+%Y%m%d')" >> "$GITHUB_OUTPUT"
          # Get last commit hash and save to file
          git rev-parse HEAD > commit_hash.txt

      - name: Check for commits
        id: check_commits
        run: |
          # Get all commits from last 24 hours
          COMMITS=$(git log --since="24 hours ago" --pretty=format:'- %s (%an)%n')
          if [ -z "$COMMITS" ]; then
            echo "No commits in the last 24 hours"
            exit 1
          fi
          # Write commits to output
          {
            echo "commits<<EOF"
            echo "$COMMITS"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create archives
        run: |
          # Create 7z archive
          7z a -t7z -mx=9 "spruceV${{ steps.get_version.outputs.version }}.7z" * .tmp_update \
            -xr!.git \
            -xr!.github \
            -x!.gitignore \
            -x!.gitattributes \
            -x!create_spruce_release.bat \
            -x!create_spruce_release.sh \
            -x!commit_hash.txt
          7z u "spruceV${{ steps.get_version.outputs.version }}.7z" commit_hash.txt

          # Create zip archive with same exclusions
          7z a -tzip "spruceV${{ steps.get_version.outputs.version }}.zip" * .tmp_update \
            -xr!.git \
            -xr!.github \
            -x!.gitignore \
            -x!.gitattributes \
            -x!create_spruce_release.bat \
            -x!create_spruce_release.sh \
            -x!commit_hash.txt
          7z u "spruceV${{ steps.get_version.outputs.version }}.zip" commit_hash.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success() && steps.check_commits.outcome == 'success'
        with:
          files: |
            spruceV${{ steps.get_version.outputs.version }}.7z
            spruceV${{ steps.get_version.outputs.version }}.zip
          tag_name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.check_commits.outputs.commits }}
          repository: spruceUI/spruceOS
          token: ${{ secrets.PAT_TOKEN }}
          draft: false
          prerelease: true

      - name: Update OTA file
        if: success() && steps.check_commits.outcome == 'success'
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Clone the OTA repository
          git clone https://github.com/spruceUI/spruceui.github.io.git ota_repo
          
          # Calculate file info
          CHECKSUM=$(md5sum "spruceV${{ steps.get_version.outputs.version }}.7z" | cut -d' ' -f1)
          SIZE_MB=$(ls -l --block-size=1M "spruceV${{ steps.get_version.outputs.version }}.7z" | awk '{print $5}')
          
          # Read existing file content
          CONTENT=$(cat ota_repo/OTA/spruce)
          
          # Update release information while preserving other content
          echo "$CONTENT" | grep -v "^RELEASE_" > ota_repo/OTA/spruce
          echo "RELEASE_VERSION=${{ steps.get_version.outputs.version }}" >> ota_repo/OTA/spruce
          echo "RELEASE_CHECKSUM=$CHECKSUM" >> ota_repo/OTA/spruce
          echo "RELEASE_SIZE_IN_MB=$SIZE_MB" >> ota_repo/OTA/spruce
          echo "RELEASE_LINK=https://github.com/spruceUI/spruceOS/releases/download/v${{ steps.get_version.outputs.version }}/spruceV${{ steps.get_version.outputs.version }}.7z" >> ota_repo/OTA/spruce
          
          # Configure git
          cd ota_repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Commit and push changes
          git add OTA/spruce
          git commit -m "Update release to ${{ steps.get_version.outputs.version }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/spruceUI/spruceui.github.io.git main